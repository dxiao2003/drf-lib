var errorModule=angular.module("drf-lib.error",["angular.filter"]),errorParser=function(r,t){this.ucfirstFilter=t,this.lowercaseFilter=r};errorParser.$inject=["lowercaseFilter","ucfirstFilter"],errorParser.prototype.extractMessage=function(r){var t=this;if(r.data&&r.data.non_field_errors)return r.data.non_field_errors.join(" ");if(r.data&&r.data.detail)return r.data.detail;if(400==r.status){var e="";for(var n in r.data)e+=t.ucfirstFilter(t.lowercaseFilter(n))+": "+r.data[n]+" ";return e}return r.statusText?t.ucfirstFilter(t.lowercaseFilter(r.statusText)):angular.isString(r)?r:"Service unavailable"},errorModule.service("errorParser",errorParser),angular.module("drf-lib.util",[]).service("restServiceHelper",["drfUtil",function(r){var t=this;t.createListFunction=function(t,e){return function(n){n=r.underscoredProperties(n)||{};var o=t.get(n).$promise;return e||(e=function(r){return r}),o.then(e).then(function(r){if(r.hasOwnProperty("results")){var t=r.results;return angular.isNumber(r.count)&&(t.count=r.count),t}return r})}}}]).service("drfUtil",["$window","$q",function(r,t){function e(r){function t(e){if(angular.isArray(e)){for(var n=e,o=[],a=0;a<n.length;a++)o.push(t(n[a]));return o}if(angular.isObject(e)){var u=e,i={};for(var s in u)u.hasOwnProperty(s)&&0!==s.indexOf("$")&&(angular.isObject(u[s])?i[r(s)]=t(u[s]):i[r(s)]=u[s]);return i}return e}return t}var n=this,o=r.s;n.camelizeProperties=e(o.camelize),n.underscoredProperties=e(o.underscored),n.wrapMethod=function(r,e,n){return function(){e();var o=r.apply(this,arguments);return o&&o.then?o.then(function(r){return n(),r},function(r){return n(),t.reject(r)}):(n(),o)}},n.wrapMethods=function(r,t,e){var o=angular.copy(r);o.wrapped={};for(var a in r)if(angular.isFunction(r[a])){var u=function(t){return function(){return t.apply(r,arguments)}};o.wrapped[a]=n.wrapMethod(u(r[a]),t,e)}return o},n.uuid4=function(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(r){var t=16*Math.random()|0,e="x"==r?t:3&t|8;return e.toString(16)})}}]),angular.module("drf-lib.auth.rest",["ngResource","rest-api.url"]).service("authRest",["$http","urlOf","$q","drfUtil",function(r,t,e,n){function o(r){if(200==r.status)return r.data.key;throw r}return this.login=function(e,n){return r.post(t.login,{username:e,password:n}).then(o)},this.externalLogin=function(a,u){return u=n.underscoredProperties(u),t[a+"-login"]?r.post(t[a+"-login"],u).then(o):e.reject({provider:a})},this.logoutEverywhere=function(){return r.post(t.logout)},this}]);var authModule=angular.module("drf-lib.auth.services",["drf-lib.auth.rest"]).service("authInterceptor",["$injector","urlService","$q",function(r,t,e){return{responseError:function(t){var n=r.get("authService");return 401==t.status&&n.isAuthenticated()&&n.logout(t),e.reject(t)},request:function(e){var n=r.get("authService");return t.domainRequiresAuthorization(e.url)&&n.isAuthenticated()&&(e.headers=e.headers||{},e.headers.Authorization=n.authHeader()),e}}}]).config(["$httpProvider",function(r){r.interceptors.push("authInterceptor")}]),authService=function(r,t,e,n,o,a){var u=this;u.authRest=r,u.$localStorage=t,u.$injector=e,u.$log=n,u.loginCallbacks=o,u.logoutCallbacks=a,t.auth&&t.auth.token&&u.setIdentity(t.auth.token,t.auth.username)};authService.prototype.login=function(r,t){var e=this;return e.authRest.login(r,t).then(function(t){return e.setIdentity(t,r),t})},authService.prototype.externalLogin=function(r,t){var e=this;return e.authRest.externalLogin(r,t).then(function(r){return e.setIdentity(r,u),r})},authService.prototype.setIdentity=function(r,t){var e=this;e.$localStorage.auth={token:r,username:t};for(var n=0;n<e.loginCallbacks.length;n++){var o=e.loginCallbacks[n];try{e.$injector.invoke(o,null,{token:r,username:t,authService:e})}catch(a){e.$log.error("error running login callback: "+a)}}},authService.prototype.logout=function(r){var t=this;t.$localStorage.auth&&delete t.$localStorage.auth.token,t.$localStorage.username&&delete t.$localStorage.auth.username;for(var e=0;e<t.logoutCallbacks.length;e++){var n=t.logoutCallbacks[e];try{t.$injector.invoke(n,t,{authService:t,response:r})}catch(o){t.$log.error("error running logout callback: "+o)}}},authService.prototype.logoutEverywhere=function(){var r=this;return r.authRest.logoutEverywhere().then(function(t){return r.logout(),t})},authService.prototype.getToken=function(){var r=this;return r.$localStorage.auth?r.$localStorage.auth.token:void 0},authService.prototype.getUsername=function(){var r=this;return r.$localStorage.auth?r.$localStorage.auth.username:void 0},authService.prototype.authHeader=function(){var r=this;return"Token "+r.getToken()},authService.prototype.isAuthenticated=function(){var r=this;return r.$localStorage.auth&&!!r.$localStorage.auth.token},authModule.provider("authService",function(){var r=this,t=[],e=[];r.addLoginCallback=function(r){t.push(r)},r.addLogoutCallback=function(r){e.push(r)},r.$get=["authRest","$localStorage","$injector","$log",function(r,n,o,a){return new authService(r,n,o,a,t,e)}]}),angular.module("drf-lib.user.rest",["ngResource","rest-api.url"]).service("userRest",["$resource","urlOf","$http","drfUtil",function(r,t,e,n){var o=this,a=function(r){return n.camelizeProperties(r)},u=function(r){return r.data};o.getProfile=function(){var e=r(t["rest-auth-user"]);return e.get().$promise.then(a)},o.setProfile=function(e){e=n.underscoredProperties(e);var o=r(t["rest-auth-user"],void 0,{update:{method:"PUT"}}),u=new o(e);return u.$update().then(a)},o.setPassword=function(r,n){return e.post(t["rest-auth-set-password"],{new_password1:r,new_password2:n}).then(u).then(a)},o.registerUser=function(r,n,o,i){var s={username:r,password1:o,password2:o,email:i};return e.post(t["rest-auth-register"],s).then(u).then(a)},o.resetPassword=function(r){return e.post(t["rest-auth-reset-password"],{email:r}).then(u).then(a)},o.confirmResetPassword=function(r,n,o,i){var s={uid:r,token:n,new_password1:o,new_password2:i};return e.post(t["rest-auth-confirm-reset"],s).then(u).then(a)}}]);