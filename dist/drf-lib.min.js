var errorModule=angular.module("drf-lib.error",["angular.filter"]),errorParser=function(e,r){this.ucfirstFilter=r,this.lowercaseFilter=e};errorParser.$inject=["lowercaseFilter","ucfirstFilter"],errorParser.prototype.extractMessage=function(e){var r=this;if(e.data&&e.data.non_field_errors)return e.data.non_field_errors.join(" ");if(e.data&&e.data.detail)return e.data.detail;if(400==e.status){var t="";for(var n in e.data)t+=r.ucfirstFilter(r.lowercaseFilter(n))+": "+e.data[n]+" ";return t}return e.statusText?r.ucfirstFilter(r.lowercaseFilter(e.statusText)):e.message?e.message:angular.isString(e)?e:"Service unavailable"},errorModule.service("errorParser",errorParser),angular.module("drf-lib.util",[]).service("restServiceHelper",["drfUtil",function(e){var r=this;r.createListFunction=function(r,t){return function(n){n=e.underscoredProperties(n)||{};var o=r.get(n).$promise;return t||(t=function(e){return e}),o.then(t).then(function(e){if(e.hasOwnProperty("results")){var r=e.results;return angular.isNumber(e.count)&&(r.count=e.count),r}return e})}}}]).service("drfUtil",["$window","$q",function(e,r){function t(e){function r(t){if(angular.isArray(t)){for(var n=t,o=[],a=0;a<n.length;a++)o.push(r(n[a]));return o}if(angular.isObject(t)){var u=t,i={};for(var s in u)u.hasOwnProperty(s)&&0!==s.indexOf("$")&&(angular.isObject(u[s])?i[e(s)]=r(u[s]):i[e(s)]=u[s]);return i}return t}return r}var n=this,o=e.s;n.camelizeProperties=t(o.camelize),n.underscoredProperties=t(o.underscored),n.wrapMethod=function(e,t,n){return function(){t();var o=e.apply(this,arguments);return o&&o.then?o.then(function(e){return n(),e},function(e){return n(),r.reject(e)}):(n(),o)}},n.wrapMethods=function(e,r,t){var o=angular.copy(e);o.wrapped={};for(var a in e)if(angular.isFunction(e[a])){var u=function(r){return function(){return r.apply(e,arguments)}};o.wrapped[a]=n.wrapMethod(u(e[a]),r,t)}return o},n.uuid4=function(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(e){var r=16*Math.random()|0,t="x"==e?r:3&r|8;return t.toString(16)})}}]),angular.module("drf-lib.auth.rest",["ngResource","rest-api.url"]).service("authRest",["$http","urlOf","$q","drfUtil",function(e,r,t,n){function o(e){if(200==e.status)return e.data.key;throw e}return this.login=function(t,n){return e.post(r.login,{username:t,password:n}).then(o)},this.jwt=function(t){return e({method:"GET",url:r.jwt,headers:{Authorization:"Token "+t}}).then(function(e){return 200==e.status?e.data.token:e})},this.externalLogin=function(a,u){return u=n.underscoredProperties(u),r[a+"-login"]?e.post(r[a+"-login"],u).then(o):t.reject({provider:a})},this.logoutEverywhere=function(){return e.post(r.logout)},this}]);var authModule=angular.module("drf-lib.auth.services",["drf-lib.auth.rest","drf-lib.user.rest","drf-lib.error","angular-jwt"]).service("authInterceptor",["$injector","urlService","$q",function(e,r,t){return{responseError:function(r){var n=e.get("authService");return 401==r.status&&n.isAuthenticated()?n.tryReconnect(r):t.reject(r)},request:function(t){var n=e.get("authService");return r.domainRequiresAuthorization(t.url)&&n.isAuthenticated()?(t.headers=t.headers||{},t.headers.Authorization?t:n.setAuthHeader(t)):t}}}]).config(["$httpProvider",function(e){e.interceptors.push("authInterceptor")}]),authService=function(e,r,t,n,o,a,u,i,s,c,l){var h=this;h.$timeout=i,h.jwtHelper=u,h.authRest=e,h.$localStorage=r,h.$injector=t,h.$log=n,h.loginCallbacks=c,h.logoutCallbacks=l,h.userRest=o,h.errorParser=a,h.savedJWTDeferred=s.defer(),h.$q=s,h.savedJWTPromise=h.savedJWTDeferred.promise,r.auth&&r.auth.token&&h.setIdentity(r.auth.token,r.auth.username)};authService.prototype.tryReconnect=function(e){var r=this;return!r.reconnecting&&r.$localStorage.auth&&r.$localStorage.auth.token?(r.reconnecting=!0,r.setIdentity(r.$localStorage.auth.token,r.$localStorage.auth.username)["catch"](function(t){return r.$q.reject(e)}).then(function(t){var n=r.$injector.get("$http");return n(e.config)})["finally"](function(){r.reconnecting=!1})):$q.reject(e)},authService.prototype.login=function(e,r){var t=this;return t.authRest.login(e,r).then(function(r){return t.setIdentity(r,e)}).then(function(){return t.userRest.getProfile()["catch"](function(e){var r=t.errorParser.extractMessage(e);throw t.$log.error("Could not load user profile: "+r),e})})},authService.prototype.externalLogin=function(e,r){var t=this;return t.authRest.externalLogin(e,r).then(function(e){return t.setIdentity(e,null)}).then(function(){return t.userRest.getProfile().then(function(e){return t.$localStorage.auth.username=e.username,e})["catch"](function(e){var r=t.errorParser.extractMessage(e);throw t.$log.error("Could not load user profile: "+r),e})})},authService.prototype.setUserRefresh=function(e,r,t){var n=this;try{var o=n.jwtHelper.getTokenExpirationDate(e);r=r||5e3,t=t||1e4;var a=Math.max(o.getTime()-Date.now()-r,t);n.refreshPromise=n.$timeout(function(){n.setJWT(r,t)},a)}catch(u){n.$log.error("Could not set user refresh timer due to "+u)}},authService.prototype.setIdentity=function(e,r,t,n,o){var a=this;return a.$localStorage.auth={token:e,username:r},a.setJWT(t,n,o).then(function(){if(!t)for(var n=0;n<a.loginCallbacks.length;n++){var o=a.loginCallbacks[n];try{a.$injector.invoke(o,null,{token:e,username:r,authService:a})}catch(u){a.$log.error("error running login callback: "+u)}}})},authService.prototype.setJWT=function(e,r){var t=this;return t.getToken()?t.authRest.jwt(t.getToken()).then(function(n){try{t.savedJWTDeferred.resolve(n)}catch(o){}t.savedJWT=n,t.setUserRefresh(n,e,r)}):$q.reject(new Error("No token set"))},authService.prototype.logout=function(e){var r=this;r.$localStorage.auth&&delete r.$localStorage.auth,r.refreshPromise&&(r.$timeout.cancel(r.refreshPromise),delete r.refreshPromise);for(var t=0;t<r.logoutCallbacks.length;t++){var n=r.logoutCallbacks[t];try{r.$injector.invoke(n,r,{authService:r,response:e})}catch(o){r.$log.error("error running logout callback: "+o)}}},authService.prototype.logoutEverywhere=function(){var e=this;return e.authRest.logoutEverywhere().then(function(r){return e.logout(),r})},authService.prototype.getToken=function(){var e=this;return e.$localStorage.auth?e.$localStorage.auth.token:void 0},authService.prototype.setUsername=function(e){var r=this;if(!r.$localStorage.auth)throw"Not logged in";r.$localStorage.auth.username=e},authService.prototype.getUsername=function(){var e=this;return e.$localStorage.auth?e.$localStorage.auth.username:void 0},authService.prototype.setAuthHeader=function(e){var r=this;try{return e.headers.Authorization=r.authHeader(),e}catch(t){return r.savedJWTPromise.then(function(r){return e.headers.Authorization="JWT "+r,e})}},authService.prototype.authHeader=function(){var e=this;if(e.savedJWT)return"JWT "+e.savedJWT;throw new Error("No JWT available")},authService.prototype.isAuthenticated=function(){var e=this;return e.$localStorage.auth&&!!e.$localStorage.auth.token},authModule.provider("authService",function(){var e=this,r=[],t=[];e.addLoginCallback=function(e){r.push(e)},e.addLogoutCallback=function(e){t.push(e)},e.$get=["authRest","$localStorage","$injector","$log","userRest","errorParser","jwtHelper","$timeout","$q",function(e,n,o,a,u,i,s,c,l){return new authService(e,n,o,a,u,i,s,c,l,r,t)}]}),angular.module("drf-lib.user.rest",["ngResource","rest-api.url"]).service("userRest",["$resource","urlOf","$http","drfUtil",function(e,r,t,n){var o=this,a=function(e){return n.camelizeProperties(e)},u=function(e){return e.data};o.getProfile=function(){var t=e(r["rest-auth-user-self"]);return t.get().$promise.then(a)},o.setProfile=function(t){t=n.underscoredProperties(t);var o=e(r["rest-auth-user-self"],void 0,{update:{method:"PUT"}}),u=new o(t);return u.$update().then(a)},o.setPassword=function(e,n){return t.post(r["rest-auth-set-password"],{new_password1:e,new_password2:n}).then(u).then(a)},o.registerUser=function(e,n,o,i){var s={username:e,password1:o,password2:o,email:i};return t.post(r["rest-auth-register"],s).then(u).then(a)},o.resetPassword=function(e){return t.post(r["rest-auth-reset-password"],{email:e}).then(u).then(a)},o.confirmResetPassword=function(e,n,o,i){var s={uid:e,token:n,new_password1:o,new_password2:i};return t.post(r["rest-auth-confirm-reset"],s).then(u).then(a)},o.linkExternalLogin=function(e,o){return o=n.underscoredProperties(o),r[e+"-login"]?t.post(r[e+"-login"]+"?process=connect",o).then(function(e){return e.data}).then(a):$q.reject({provider:e})},o.disconnectExternalLogin=function(t,n){var o=e(r["rest-auth-user-external-login"]);return o.remove({username:t.username,externalLoginId:n}).$promise.then(a)}}]);